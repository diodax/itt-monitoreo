{"_id":"include-all","_rev":"43-ae64eba7b76f34149e6c308960e7137f","name":"include-all","description":"An easy way to include all node.js modules within a directory.  This is a fork of felixge's awesome module, require-all (https://github.com/felixge/node-require-all) which adds the ability to mark an include as **optional**.","dist-tags":{"latest":"0.1.6","beta":"1.0.3"},"versions":{"0.0.0":{"name":"include-all","version":"0.0.0","description":"An easy way to include all (or require all) files within a directory. Note: This is a fork of felixge's require-all which returns false instead of throwing an error if the directory doesn't exist.  This allows for optional includes, and relieves you from ","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/node-require-all.git"},"keywords":["require-all","include-all","include","require","directory"],"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","_id":"include-all@0.0.0","dist":{"shasum":"3a7c33c9dac1ae46629305d18ec40c93f128e91a","tarball":"https://registry.npmjs.org/include-all/-/include-all-0.0.0.tgz"},"_npmVersion":"1.1.66","_npmUser":{"name":"balderdashy","email":"mike@balderdashdesign.com"},"maintainers":[{"name":"balderdashy","email":"mike@balderdashdesign.com"}]},"0.0.1":{"name":"include-all","version":"0.0.1","description":"An easy way to include all (or require all) files within a directory. Note: This is a fork of felixge's require-all which returns false instead of throwing an error if the directory doesn't exist.  This allows for optional includes, and relieves you from ","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/node-require-all.git"},"keywords":["require-all","include-all","include","require","directory"],"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","_id":"include-all@0.0.1","dist":{"shasum":"e8cdb02b7eeb0fa7590f7ac873c6bbf8650653f6","tarball":"https://registry.npmjs.org/include-all/-/include-all-0.0.1.tgz"},"_npmVersion":"1.1.66","_npmUser":{"name":"balderdashy","email":"mike@balderdashdesign.com"},"maintainers":[{"name":"balderdashy","email":"mike@balderdashdesign.com"}]},"0.0.2":{"name":"include-all","version":"0.0.2","description":"An easy way to include all node.js modules within a directory.  This is a fork of felixge's awesome module, require-all (https://github.com/felixge/node-require-all) which adds the ability to mark an include as **optional**.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/node-require-all.git"},"keywords":["require-all","include-all","include","require","directory"],"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","_id":"include-all@0.0.2","dist":{"shasum":"0f617efffa13d5a83f1ceee9375bdd7298776173","tarball":"https://registry.npmjs.org/include-all/-/include-all-0.0.2.tgz"},"_npmVersion":"1.1.66","_npmUser":{"name":"balderdashy","email":"mike@balderdashdesign.com"},"maintainers":[{"name":"balderdashy","email":"mike@balderdashdesign.com"}]},"0.0.5":{"name":"include-all","version":"0.0.5","description":"An easy way to include all node.js modules within a directory.  This is a fork of felixge's awesome module, require-all (https://github.com/felixge/node-require-all) which adds the ability to mark an include as **optional**.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/include-all.git"},"keywords":["require-all","include-all","include","require","directory"],"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","_id":"include-all@0.0.5","dist":{"shasum":"1669db801eed70c48ad3b365e2812c30ac2f5b90","tarball":"https://registry.npmjs.org/include-all/-/include-all-0.0.5.tgz"},"_npmVersion":"1.1.66","_npmUser":{"name":"balderdashy","email":"mike@balderdashdesign.com"},"maintainers":[{"name":"balderdashy","email":"mike@balderdashdesign.com"}]},"0.0.6":{"name":"include-all","version":"0.0.6","description":"An easy way to include all node.js modules within a directory.  This is a fork of felixge's awesome module, require-all (https://github.com/felixge/node-require-all) which adds the ability to mark an include as **optional**.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/include-all.git"},"keywords":["require-all","include-all","include","require","directory"],"dependencies":{"underscore.string":"2.3.1"},"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","_id":"include-all@0.0.6","dist":{"shasum":"536cfe05860f10b7f7dced0386381907b34a19d4","tarball":"https://registry.npmjs.org/include-all/-/include-all-0.0.6.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"balderdashy","email":"mike@balderdash.co"},"maintainers":[{"name":"balderdashy","email":"mike@balderdashdesign.com"}]},"0.1.0":{"name":"include-all","version":"0.1.0","description":"An easy way to include all node.js modules within a directory.  This is a fork of felixge's awesome module, require-all (https://github.com/felixge/node-require-all) which adds the ability to mark an include as **optional**.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/include-all.git"},"keywords":["require-all","include-all","include","require","directory"],"dependencies":{"underscore.string":"2.3.1"},"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","_id":"include-all@0.1.0","dist":{"shasum":"09ba21eae88af92848c93f7afab7a6a263f257f6","tarball":"https://registry.npmjs.org/include-all/-/include-all-0.1.0.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"balderdashy","email":"mike@balderdash.co"},"maintainers":[{"name":"balderdashy","email":"mike@balderdashdesign.com"}]},"0.1.1":{"name":"include-all","version":"0.1.1","description":"An easy way to include all node.js modules within a directory.  This is a fork of felixge's awesome module, require-all (https://github.com/felixge/node-require-all) which adds the ability to mark an include as **optional**.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/include-all.git"},"keywords":["require-all","include-all","include","require","directory"],"dependencies":{"underscore.string":"2.3.1"},"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","_id":"include-all@0.1.1","dist":{"shasum":"17f0ea46a56f8e3ef2f047c3729675a689c9fcc5","tarball":"https://registry.npmjs.org/include-all/-/include-all-0.1.1.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"balderdashy","email":"mike@balderdash.co"},"maintainers":[{"name":"balderdashy","email":"mike@balderdashdesign.com"}]},"0.1.2":{"name":"include-all","version":"0.1.2","description":"An easy way to include all node.js modules within a directory.  This is a fork of felixge's awesome module, require-all (https://github.com/felixge/node-require-all) which adds the ability to mark an include as **optional**.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/include-all.git"},"keywords":["require-all","include-all","include","require","directory"],"dependencies":{"underscore.string":"2.3.1"},"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","_id":"include-all@0.1.2","dist":{"shasum":"fcac3f44ede955aeb41067e4de7d062633edb4c5","tarball":"https://registry.npmjs.org/include-all/-/include-all-0.1.2.tgz"},"_from":".","_npmVersion":"1.2.15","_npmUser":{"name":"balderdashy","email":"mike@balderdash.co"},"maintainers":[{"name":"balderdashy","email":"mike@balderdashdesign.com"}]},"0.1.3":{"name":"include-all","version":"0.1.3","description":"An easy way to include all node.js modules within a directory.  This is a fork of felixge's awesome module, require-all (https://github.com/felixge/node-require-all) which adds the ability to mark an include as **optional**.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/include-all.git"},"keywords":["require-all","include-all","include","require","directory"],"dependencies":{"underscore.string":"2.3.1"},"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","bugs":{"url":"https://github.com/mikermcneil/include-all/issues"},"_id":"include-all@0.1.3","dist":{"shasum":"2d21f960bfd5f24df36c80902170c5f5a8c0b400","tarball":"https://registry.npmjs.org/include-all/-/include-all-0.1.3.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"sgress454","email":"scott@balderdash.co"},"maintainers":[{"name":"balderdashy","email":"mike@balderdashdesign.com"},{"name":"sgress454","email":"scott@balderdash.co"}]},"0.1.5":{"name":"include-all","version":"0.1.5","description":"An easy way to include all node.js modules within a directory.  This is a fork of felixge's awesome module, require-all (https://github.com/felixge/node-require-all) which adds the ability to mark an include as **optional**.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/include-all.git"},"keywords":["require-all","include-all","include","require","directory"],"dependencies":{"underscore.string":"2.3.1"},"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","bugs":{"url":"https://github.com/mikermcneil/include-all/issues"},"_id":"include-all@0.1.5","dist":{"shasum":"55616f222296ec870d085dadc060d048f3cd5b41","tarball":"https://registry.npmjs.org/include-all/-/include-all-0.1.5.tgz"},"_from":".","_npmVersion":"1.3.8","_npmUser":{"name":"sgress454","email":"scott@balderdash.co"},"maintainers":[{"name":"balderdashy","email":"mike@balderdashdesign.com"},{"name":"sgress454","email":"scott@balderdash.co"}]},"0.1.6":{"name":"include-all","version":"0.1.6","description":"An easy way to include all node.js modules within a directory.  This is a fork of felixge's awesome module, require-all (https://github.com/felixge/node-require-all) which adds the ability to mark an include as **optional**.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/include-all.git"},"keywords":["require-all","include-all","include","require","directory"],"dependencies":{"underscore.string":"2.3.1"},"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","bugs":{"url":"https://github.com/mikermcneil/include-all/issues"},"homepage":"https://github.com/mikermcneil/include-all","_id":"include-all@0.1.6","dist":{"shasum":"a89676b085869185486ebfe9a19cb69ab84a652b","tarball":"https://registry.npmjs.org/include-all/-/include-all-0.1.6.tgz"},"_from":".","_npmVersion":"1.4.4","_npmUser":{"name":"balderdashy","email":"mike@balderdash.co"},"maintainers":[{"name":"balderdashy","email":"mike@balderdashdesign.com"},{"name":"sgress454","email":"scott@balderdash.co"}]},"1.0.0":{"name":"include-all","version":"1.0.0","description":"An easy way to include all node.js modules within a directory.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"node ./node_modules/mocha/bin/mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/include-all.git"},"keywords":["include-all","include","require-all","require","directory"],"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","dependencies":{"lodash":"3.10.1"},"devDependencies":{"mocha":"3.0.2"},"gitHead":"16f651d394835d8324fe73f0b8b23d0e6e01efad","bugs":{"url":"https://github.com/mikermcneil/include-all/issues"},"homepage":"https://github.com/mikermcneil/include-all#readme","_id":"include-all@1.0.0","_shasum":"fb3d8218a63129f52e19473245fe69104dcc6c97","_from":".","_npmVersion":"2.14.12","_nodeVersion":"4.3.0","_npmUser":{"name":"mikermcneil","email":"michael.r.mcneil@gmail.com"},"dist":{"shasum":"fb3d8218a63129f52e19473245fe69104dcc6c97","tarball":"https://registry.npmjs.org/include-all/-/include-all-1.0.0.tgz"},"maintainers":[{"name":"balderdashy","email":"mike@balderdash.co"},{"name":"mikermcneil","email":"michael.r.mcneil@gmail.com"},{"name":"sgress454","email":"sgress454@treeline.io"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/include-all-1.0.0.tgz_1471348703062_0.48635306558571756"}},"1.0.1":{"name":"include-all","version":"1.0.1","description":"An easy way to include all node.js modules within a directory.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"node ./node_modules/mocha/bin/mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/include-all.git"},"keywords":["include-all","include","require-all","require","directory"],"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","dependencies":{"lodash":"3.10.1"},"devDependencies":{"mocha":"3.0.2"},"gitHead":"d32201c850a77e9f84bcfc6a42ca8639db173dea","bugs":{"url":"https://github.com/mikermcneil/include-all/issues"},"homepage":"https://github.com/mikermcneil/include-all#readme","_id":"include-all@1.0.1","_shasum":"f6c0edf918b092b8e42a739aba2fff5750c54c74","_from":".","_npmVersion":"2.14.12","_nodeVersion":"4.3.0","_npmUser":{"name":"mikermcneil","email":"michael.r.mcneil@gmail.com"},"dist":{"shasum":"f6c0edf918b092b8e42a739aba2fff5750c54c74","tarball":"https://registry.npmjs.org/include-all/-/include-all-1.0.1.tgz"},"maintainers":[{"name":"balderdashy","email":"mike@balderdash.co"},{"name":"mikermcneil","email":"michael.r.mcneil@gmail.com"},{"name":"sgress454","email":"sgress454@treeline.io"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/include-all-1.0.1.tgz_1471359346812_0.9338783505372703"}},"1.0.2":{"name":"include-all","version":"1.0.2","description":"An easy way to include all node.js modules within a directory.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"node ./node_modules/mocha/bin/mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/include-all.git"},"keywords":["include-all","include","require-all","require","directory"],"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","dependencies":{"lodash":"3.10.1"},"devDependencies":{"mocha":"3.0.2"},"gitHead":"9b94d4cbba5d5acb6bf1c7f7a019c19227bd729a","bugs":{"url":"https://github.com/mikermcneil/include-all/issues"},"homepage":"https://github.com/mikermcneil/include-all#readme","_id":"include-all@1.0.2","_shasum":"180d808d569f325ab9a924165e0b461a3feab115","_from":".","_npmVersion":"2.14.12","_nodeVersion":"4.3.0","_npmUser":{"name":"mikermcneil","email":"michael.r.mcneil@gmail.com"},"dist":{"shasum":"180d808d569f325ab9a924165e0b461a3feab115","tarball":"https://registry.npmjs.org/include-all/-/include-all-1.0.2.tgz"},"maintainers":[{"name":"balderdashy","email":"mike@balderdash.co"},{"name":"mikermcneil","email":"michael.r.mcneil@gmail.com"},{"name":"sgress454","email":"sgress454@treeline.io"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/include-all-1.0.2.tgz_1472163126162_0.820889781229198"}},"1.0.3":{"name":"include-all","version":"1.0.3","description":"An easy way to include all node.js modules within a directory.","main":"index.js","directories":{"test":"test"},"scripts":{"test":"node ./node_modules/mocha/bin/mocha"},"repository":{"type":"git","url":"git://github.com/mikermcneil/include-all.git"},"keywords":["include-all","include","require-all","require","directory"],"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"license":"MIT","dependencies":{"lodash":"3.10.1"},"devDependencies":{"mocha":"3.0.2"},"gitHead":"2e91f3f46c3714e7cbbbd8b7f948dc507e14ae6a","bugs":{"url":"https://github.com/mikermcneil/include-all/issues"},"homepage":"https://github.com/mikermcneil/include-all#readme","_id":"include-all@1.0.3","_shasum":"d824085b41880f62e8350f021a731e0b5fda3d86","_from":".","_npmVersion":"2.14.12","_nodeVersion":"4.3.0","_npmUser":{"name":"mikermcneil","email":"michael.r.mcneil@gmail.com"},"dist":{"shasum":"d824085b41880f62e8350f021a731e0b5fda3d86","tarball":"https://registry.npmjs.org/include-all/-/include-all-1.0.3.tgz"},"maintainers":[{"name":"balderdashy","email":"mike@balderdash.co"},{"name":"mikermcneil","email":"michael.r.mcneil@gmail.com"},{"name":"sgress454","email":"sgress454@treeline.io"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/include-all-1.0.3.tgz_1472168102767_0.21152884978801012"}}},"readme":"# include-all\n\nAn easy way to include all node.js modules within a directory.\n\n> This utility is [called by the moduleloader hook](https://github.com/balderdashy/sails/tree/v0.12.4/lib/hooks/moduleloader) in Sails.js.\n\n\n\n## Installation\n\n```\nnpm install include-all --save\n```\n\n\n## Low-level synchronous usage\n\nBy default, `include-all` is synchronous, and a bit low-level.  There are also asynchronous helper methods (which are a bit higher-level), but more on that in a sec.\n\nFirst, here are some examples of the low-level, synchronous usage:\n\n##### Filter by filename or path\n\n\n```js\nvar path = require('include-all');\nvar includeAll = require('include-all');\n\nvar controllers = require('include-all')({\n  dirname     :  path.join(__dirname, 'controllers'),\n  filter      :  /(.+Controller)\\.js$/,\n  excludeDirs :  /^\\.(git|svn)$/\n});\n\n```\n\n\n`controllers` is now a dictionary with references to all modules matching the filter.\nThe keys are the filenames (minus the extension).\n\nFor example:\n\n```javascript\n{\n  PageController: {\n    showHomepage: function (req, res) { /*...*/ },\n    /*...*/\n  },\n  /*...*/\n}\n```\n\n> Keep in mind that the case-sensitivity of file and directory names varies between operating systems (Linux/Windows/Mac).\n\n\n\n##### Optional include\n\nNormally, if an error is encountered when requiring/reading/listing files or directories, it is thrown.  To swallow that error silently, set `optional: true`:\n\n```javascript\nvar models = require('include-all')({\n  dirname     :  path.join(__dirname, 'models'),\n  filter      :  /(.+)\\.js$/,\n  excludeDirs :  /^\\.(git|svn)$/,\n  optional    :  true\n});\n\n```\n\n`models` is now a dictionary with references to all modules matching the filter.\nIf `__dirname + '/models'` doesn't exist, instead of throwing an error, `{}` is returned.\n\nFor example:\n\n```\n{\n  User: {\n    attributes: {},\n    datastore: 'localDiskDb',\n    /*...*/\n  },\n  /*...*/\n}\n```\n\n\n\n\n## High-level asynchronous usage\n\n> The logic from [sails-build-dictionary](https://github.com/sailsjs/sails-build-dictionary) was migrated here.\n\nWhen you run `require('include-all')`, you get a function.  Calling that function uses include-all with default settings (and any of the options from the table below may be passed in.)\n\nBut there are also a handful of convenience methods exposed as properties of that function.  For example:\n\n```javascript\nvar includeAll = require('include-all');\n\n// Could just call `includeAll()` for synchronous usage.\n//\n// But could also take advantage of ASYNCHRONOUS usage via:\n// • includeAll.optional();\n// • includeAll.exists();\n// • includeAll.aggregate();\n```\n\n\n#### Available convenience methods\n\n`include-all` exposes 3 different methods for asynchronous usage.\n\nThe following convenience methods take the same \"options,cb\" signature as the default `includeAll` function, and they support all of the same options.\n\n\n##### .optional()\n\nBuild a dictionary of named modules.\n(fails silently-- returns {} -- if the container cannot be loaded)\n\n> This is how most things in the `api/` folder of Sails apps are loaded (e.g. controllers, models, etc.)\n\n\n```javascript\nvar path = require('path');\nvar includeAll = require('include-all');\n\nincludeAll.optional({\n  dirname: path.resolve('api/controllers'),\n  filter: /(.+)Controller\\.js$/\n}, function (err, modules){\n  if (err) {\n    console.error('Failed to load controllers.  Details:',err);\n    return;\n  }\n\n  console.log(modules);\n\n  // =>\n  // (notice that `identity` and `globalId` are added automatically)\n  //\n  // ```\n  //  { page:\n  //   { showSignupPage: [Function],\n  //     showRestorePage: [Function],\n  //     showEditProfilePage: [Function],\n  //     showProfilePage: [Function],\n  //     showAdminPage: [Function],\n  //     showHomePage: [Function],\n  //     showVideosPage: [Function],\n  //     identity: 'page',\n  //     globalId: 'Page' },\n  //  user:\n  //   { login: [Function],\n  //     logout: [Function],\n  //     signup: [Function],\n  //     removeProfile: [Function],\n  //     restoreProfile: [Function],\n  //     restoreGravatarURL: [Function],\n  //     updateProfile: [Function],\n  //     changePassword: [Function],\n  //     adminUsers: [Function],\n  //     updateAdmin: [Function],\n  //     updateBanned: [Function],\n  //     updateDeleted: [Function],\n  //     identity: 'user',\n  //     globalId: 'User' },\n  //  video: { identity: 'video', globalId: 'Video' } }\n  // ```\n});\n```\n\n\n\n##### .exists()\n\nBuild a dictionary indicating whether the matched modules exist\n(fails silently-- returns {} if the container cannot be loaded)\n\n> This is how Sails detects the existence of views.\n\n\n##### .aggregate()\n\nBuild a single module dictionary by extending {} with the contents of each module.\n(fail silently-- returns {} if the container cannot be loaded)\n\n> This is how `sails.config` is built from config files.\n\nFor example:\n\n```javascript\nrequire('include-all').aggregate({\n  dirname: '/code/brushfire-ch10-end/config/',\n  filter: /(.+)\\.js$/,\n  depth: 1\n}, function (err, modules) {\n  if (err) { console.error('Error:', err); return; }\n\n  // =>\n  //  { blueprints: { actions: false, rest: false, shortcuts: false },\n  //    bootstrap: [Function],\n  //    connections:\n  //     { localDiskDb: { adapter: 'sails-disk' },\n  //       someMysqlServer:\n  //        { adapter: 'sails-mysql',\n  //          host: 'YOUR_MYSQL_SERVER_HOSTNAME_OR_IP_ADDRESS',\n  //          user: 'YOUR_MYSQL_USER',\n  //          password: 'YOUR_MYSQL_PASSWORD',\n  //          database: 'YOUR_MYSQL_DB' },\n  //       someMongodbServer: { adapter: 'sails-mongo', host: 'localhost', port: 27017 },\n  //       somePostgresqlServer:\n  //        { adapter: 'sails-postgresql',\n  //          host: 'YOUR_POSTGRES_SERVER_HOSTNAME_OR_IP_ADDRESS',\n  //          user: 'YOUR_POSTGRES_USER',\n  //          password: 'YOUR_POSTGRES_PASSWORD',\n  //          database: 'YOUR_POSTGRES_DB' },\n  //       myPostgresqlServer:\n  //        { adapter: 'sails-postgresql',\n  //          host: 'localhost',\n  //          user: 'jgalt',\n  //          password: 'blahblah',\n  //          database: 'brushfire' } },\n  //    cors: {},\n  //    globals: {},\n  //    http: {},\n  //    i18n: {},\n  //    log: {},\n  //    models: { connection: 'localDiskDb', schema: true, migrate: 'drop' },\n  //    policies:\n  //     { '*': true,\n  //       VideoController: { create: [Object] },\n  //       UserController:\n  //        { login: [Object],\n  //          logout: [Object],\n  //          removeProfile: [Object],\n  //          updateProfile: [Object],\n  //          restoreGravatarURL: [Object],\n  //          changePassword: [Object],\n  //          signup: [Object],\n  //          restoreProfile: [Object],\n  //          adminUsers: [Object],\n  //          updateAdmin: [Object],\n  //          updateBanned: [Object],\n  //          updateDeleted: [Object] },\n  //       PageController:\n  //        { showSignupPage: [Object],\n  //          showAdminPage: [Object],\n  //          showProfilePage: [Object],\n  //          showEditProfilePage: [Object],\n  //          showRestorePage: [Object] } },\n  //    routes:\n  //     { 'PUT /login': 'UserController.login',\n  //       'GET /logout': 'UserController.logout',\n  //       'GET /video': 'VideoController.find',\n  //       'POST /video': 'VideoController.create',\n  //       'POST /user/signup': 'UserController.signup',\n  //       'PUT /user/removeProfile': 'UserController.removeProfile',\n  //       'PUT /user/restoreProfile': 'UserController.restoreProfile',\n  //       'PUT /user/restoreGravatarURL': 'UserController.restoreGravatarURL',\n  //       'PUT /user/updateProfile': 'UserController.updateProfile',\n  //       'PUT /user/changePassword': 'UserController.changePassword',\n  //       'GET /user/adminUsers': 'UserController.adminUsers',\n  //       'PUT /user/updateAdmin/:id': 'UserController.updateAdmin',\n  //       'PUT /user/updateBanned/:id': 'UserController.updateBanned',\n  //       'PUT /user/updateDeleted/:id': 'UserController.updateDeleted',\n  //       'GET /': 'PageController.showHomePage',\n  //       'GET /videos': 'PageController.showVideosPage',\n  //       'GET /administration': 'PageController.showAdminPage',\n  //       'GET /profile': 'PageController.showProfilePage',\n  //       'GET /edit-profile': 'PageController.showEditProfilePage',\n  //       'GET /restore': 'PageController.showRestorePage',\n  //       'GET /signup': 'PageController.showSignupPage' },\n  //    session: { secret: 'blahblah' },\n  //    sockets: {},\n  //    views: { engine: 'ejs', layout: 'layout', partials: true } }\n});\n```\n\n\n\n## Options\n\n| Option      | Description\n|:------------|:------------------------------------------------------------------------|\n| dirname     | The absolute path of a directory to load modules from.\n| force       | When set, any past require cache entry will be cleared before re-requiring a module.\n| optional    | if enabled, continue silently and return {} when source directory does not exist or cannot be read.  Normally, this throws an error in that scenario.  default: false\n| ignoreRequireFailures    | if enabled, continue silently if a `require()` call throws.  _This should be used with care!  It completely swallows the require error!_  default: false.  This is useful for tolerating malformed node_modules (see https://github.com/balderdashy/include-all/pull/14)\n| excludeDirs | A regular expression used to EXCLUDE directories by name.\n| depth       | the maximum level of recursion where modules will be included. Defaults to infinity.\n| filter      | only include modules whose FILENAME matches this regex. default `undefined`\n| pathFilter  | only include modules whose FULL RELATIVE PATH matches this regex (relative from the entry point directory). default `undefined`\n| dontLoad    | if `dontLoad` is set to true, don't run the module w/ V8 or load it into memory-- instead, return a tree representing the directory structure (all extant file leaves are included as keys, with their value = `true`)\n| flattenDirectories | if enabled, ALL modules appear as top-level keys in the dictionary-- even those from within nested directories.\n| keepDirectoryPath | Only relevant if `flattenDictionaries` is `true`.  If enabled, this option causes include-all to include the directory path in the key names.\n\n\n## High-Level Options\n\n_The following options are only usable in the higher-level asynchronous methods like `optional()`:_\n\n| Option      | Description\n|:------------|:------------------------------------------------------------------------|\n| identity    | if disabled, (explicitly set to false) don't inject an identity into the module also don't try to use the bundled `identity` property in the module to determine the keyname in the result dictionary. default: true\n| useGlobalIdForKeyName |  if `useGlobalIdForKeyName` is set to true, don't lowercase the identity to get the keyname-- just use the globalId.\n| replaceExpr | in identity: use this regex to remove substrings like 'Controller' or 'Service' and replace them with the value of `replaceVal`\n| replaceVal  | see above. default value: '' |\n| aggregate   | if enabled, include-all will build the result dictionary by merging all of the target modules together.  Note: Each module must export a dictionary in order for this to work (e.g. for building a configuration dictionary from a set of config files).\n\n\n\n## History\n\nBack in 2012, this was originally forked from felixge's awesome module, `require-all` (https://github.com/felixge/node-require-all).\n\nIt adds a few extra capabilities on top:\n- the ability to `include-all` a directory as **optional**.\n- the ability to recursively stat a directory, instead of actually requiring the modules (via the `dontLoad` option)\n- the ability to filter by path, not just filename (pathFilter)\n\nSince then, it has evolved quite a bit, but the base implementation is still the same.\n\n\n## License\n\nMIT\n","maintainers":[{"name":"balderdashy","email":"mike@balderdash.co"},{"name":"mikermcneil","email":"michael.r.mcneil@gmail.com"},{"name":"sgress454","email":"sgress454@treeline.io"}],"time":{"modified":"2016-08-25T23:35:03.419Z","created":"2013-01-02T05:57:14.803Z","0.0.0":"2013-01-02T05:57:16.015Z","0.0.1":"2013-01-02T06:15:33.139Z","0.0.2":"2013-01-02T06:23:01.718Z","0.0.5":"2013-01-06T10:28:06.753Z","0.0.6":"2013-04-15T18:04:26.164Z","0.1.0":"2013-06-10T02:35:51.366Z","0.1.1":"2013-07-24T19:13:10.415Z","0.1.2":"2013-09-29T11:32:13.528Z","0.1.3":"2014-02-21T01:06:28.762Z","0.1.5":"2014-03-05T23:22:57.590Z","0.1.6":"2014-03-10T21:45:51.594Z","1.0.0":"2016-08-16T11:58:25.608Z","1.0.1":"2016-08-16T14:55:49.681Z","1.0.2":"2016-08-25T22:12:06.924Z","1.0.3":"2016-08-25T23:35:03.419Z"},"author":{"name":"felixge+thlorenz, adapted by Mike McNeil"},"repository":{"type":"git","url":"git://github.com/mikermcneil/include-all.git"},"readmeFilename":"README.md","keywords":["require-all","include-all","include","require","directory"],"bugs":{"url":"https://github.com/mikermcneil/include-all/issues"},"license":"MIT","homepage":"https://github.com/mikermcneil/include-all","users":{"nite":true,"luislobo":true,"vdsabev":true,"ugarz":true,"chriscorwin":true,"jaminroe":true,"pstoev":true},"_attachments":{},"_etag":"\"BP72Y2R5WMFK0ZKBC8AGSQJQ\""}